#include("template_ca/charDollar.vm").namespace("${entityName}Grid.eventhandler");
${entityName}Grid.eventhandler = {

    bindButtonEvent : function() {

        var self = this;
        var grid = self.grid;

        $('#btn_${entityName}_add').click(function(e) {
            e.preventDefault();
            self.onAdd();
        });

        $('#btn_${entityName}_del').click(function(e) {
            e.preventDefault();
            self.onDelete();
        });

        $('#btn_${entityName}_save').click(function(e) {
            if(!confirm(MESSAGES.format("common.js.alert.save"))){
                return;            
            } else {
                e.preventDefault();
                self.onSave();
            }
        });

        $('#btn_${entityName}_grid_reset').click(function(e) {
            if(!confirm(MESSAGES.format("common.js.grid.init"))){
                return;
            } else {
                self.defaultHandler.onCancel(self.grid);
            }
        });
        
        $('#btn_InputTbl_excel').click(function(event) {
            if(grid.getItemCount() == 0) {
                alert(_noSearchMsg);
                return;
            }
            self.onExcelExport();
        });
    },

    gridEvent : {
        onDataCellClicked : function(grid, index) {
        },

        afterQuerySuccess : function(grid, data) {
        },

    },

    onSearch : function(pageIdx) {

        this.grid.cancel();

        pageIdx = !pageIdx ? 0 : pageIdx;
        var self = this;
        var pagingFunc = function(pageIdx) {
            return self.onSearch(pageIdx);
        };

        this.controller.doQuery(this, "", pageIdx, pagingFunc);
    },

    onAdd : function() {
        var self = this;
        var grid = self.grid;

        if(!grid.tryCommit()) return;

        var defaultValues = {
                
        };
        
        self.defaultHandler.onAdd(grid, defaultValues);
    },

    onDelete : function() {
        var self = this;
        var grid = self.grid;

        grid.cancel();

        var checkedItems = grid.getCheckedItems();
        if (checkedItems.length == 0) {
            alert(MESSAGES.format("common.js.message.select.delete.target"));
            return;
        }

        self.defaultHandler.onDelete(grid);
    },

    onSave : function() {
        var grid = this.grid;

        if(!grid.tryCommit()) {
            return;
        }

        var checkedItems = grid.getCheckedItems();
        if (checkedItems.length == 0) {
            alert(MESSAGES.format("common.js.message.nodata.checked"));
            return;
        }

        this.controller.doSave(this, this.grid.localId);
    },
    
    onExcelExport : function() {

        var self = this;
        var grid = self.grid;

        self.defaultHandler.onExcelExport(grid, "Input Table");
    }
}